package com.hulles.alixia.delta.deepspeech.swig;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class impl {
    public static SWIGTYPE_p_p_ModelState new_modelstatep() {
        long cPtr = implJNI.new_modelstatep();
        return (cPtr == 0) ? null : new SWIGTYPE_p_p_ModelState(cPtr, false);
    }

    public static SWIGTYPE_p_p_ModelState copy_modelstatep(SWIGTYPE_p_ModelState value) {
        long cPtr = implJNI.copy_modelstatep(SWIGTYPE_p_ModelState.getCPtr(value));
        return (cPtr == 0) ? null : new SWIGTYPE_p_p_ModelState(cPtr, false);
    }

    public static void delete_modelstatep(SWIGTYPE_p_p_ModelState obj) {
        implJNI.delete_modelstatep(SWIGTYPE_p_p_ModelState.getCPtr(obj));
    }

    public static void modelstatep_assign(SWIGTYPE_p_p_ModelState obj, SWIGTYPE_p_ModelState value) {
        implJNI.modelstatep_assign(SWIGTYPE_p_p_ModelState.getCPtr(obj), SWIGTYPE_p_ModelState.getCPtr(value));
    }

    public static SWIGTYPE_p_ModelState modelstatep_value(SWIGTYPE_p_p_ModelState obj) {
        long cPtr = implJNI.modelstatep_value(SWIGTYPE_p_p_ModelState.getCPtr(obj));
        return (cPtr == 0) ? null : new SWIGTYPE_p_ModelState(cPtr, false);
    }

    public static SWIGTYPE_p_p_StreamingState new_streamingstatep() {
        long cPtr = implJNI.new_streamingstatep();
        return (cPtr == 0) ? null : new SWIGTYPE_p_p_StreamingState(cPtr, false);
    }

    public static SWIGTYPE_p_p_StreamingState copy_streamingstatep(SWIGTYPE_p_StreamingState value) {
        long cPtr = implJNI.copy_streamingstatep(SWIGTYPE_p_StreamingState.getCPtr(value));
        return (cPtr == 0) ? null : new SWIGTYPE_p_p_StreamingState(cPtr, false);
    }

    public static void delete_streamingstatep(SWIGTYPE_p_p_StreamingState obj) {
        implJNI.delete_streamingstatep(SWIGTYPE_p_p_StreamingState.getCPtr(obj));
    }

    public static void streamingstatep_assign(SWIGTYPE_p_p_StreamingState obj, SWIGTYPE_p_StreamingState value) {
        implJNI.streamingstatep_assign(SWIGTYPE_p_p_StreamingState.getCPtr(obj), SWIGTYPE_p_StreamingState.getCPtr(value));
    }

    public static SWIGTYPE_p_StreamingState streamingstatep_value(SWIGTYPE_p_p_StreamingState obj) {
        long cPtr = implJNI.streamingstatep_value(SWIGTYPE_p_p_StreamingState.getCPtr(obj));
        return (cPtr == 0) ? null : new SWIGTYPE_p_StreamingState(cPtr, false);
    }

    public static MetadataItem new_metadataItem_array(int nelements) {
        long cPtr = implJNI.new_metadataItem_array(nelements);
        return (cPtr == 0) ? null : new MetadataItem(cPtr, false);
    }

    public static void delete_metadataItem_array(MetadataItem ary) {
        implJNI.delete_metadataItem_array(MetadataItem.getCPtr(ary), ary);
    }

    public static MetadataItem metadataItem_array_getitem(MetadataItem ary, int index) {
        return new MetadataItem(implJNI.metadataItem_array_getitem(MetadataItem.getCPtr(ary), ary, index), true);
    }

    public static void metadataItem_array_setitem(MetadataItem ary, int index, MetadataItem value) {
        implJNI.metadataItem_array_setitem(MetadataItem.getCPtr(ary), ary, index, MetadataItem.getCPtr(value), value);
    }

    public static int CreateModel(String aModelPath, long aBeamWidth, SWIGTYPE_p_p_ModelState retval) {
        return implJNI.CreateModel(aModelPath, aBeamWidth, SWIGTYPE_p_p_ModelState.getCPtr(retval));
    }

    public static int GetModelSampleRate(SWIGTYPE_p_ModelState aCtx) {
        return implJNI.GetModelSampleRate(SWIGTYPE_p_ModelState.getCPtr(aCtx));
    }

    public static void FreeModel(SWIGTYPE_p_ModelState ctx) {
        implJNI.FreeModel(SWIGTYPE_p_ModelState.getCPtr(ctx));
    }

    public static int EnableDecoderWithLM(SWIGTYPE_p_ModelState aCtx, String aLMPath, String aTriePath, float aLMAlpha, float aLMBeta) {
        return implJNI.EnableDecoderWithLM(SWIGTYPE_p_ModelState.getCPtr(aCtx), aLMPath, aTriePath, aLMAlpha, aLMBeta);
    }

    public static String SpeechToText(SWIGTYPE_p_ModelState aCtx, short[] aBuffer, long aBufferSize) {
        return implJNI.SpeechToText(SWIGTYPE_p_ModelState.getCPtr(aCtx), aBuffer, aBufferSize);
    }

    public static Metadata SpeechToTextWithMetadata(SWIGTYPE_p_ModelState aCtx, short[] aBuffer, long aBufferSize) {
        long cPtr = implJNI.SpeechToTextWithMetadata(SWIGTYPE_p_ModelState.getCPtr(aCtx), aBuffer, aBufferSize);
        return (cPtr == 0) ? null : new Metadata(cPtr, false);
    }

    public static int CreateStream(SWIGTYPE_p_ModelState aCtx, SWIGTYPE_p_p_StreamingState retval) {
        return implJNI.CreateStream(SWIGTYPE_p_ModelState.getCPtr(aCtx), SWIGTYPE_p_p_StreamingState.getCPtr(retval));
    }

    public static void FeedAudioContent(SWIGTYPE_p_StreamingState aSctx, short[] aBuffer, long aBufferSize) {
        implJNI.FeedAudioContent(SWIGTYPE_p_StreamingState.getCPtr(aSctx), aBuffer, aBufferSize);
    }

    public static String IntermediateDecode(SWIGTYPE_p_StreamingState aSctx) {
        return implJNI.IntermediateDecode(SWIGTYPE_p_StreamingState.getCPtr(aSctx));
    }

    public static String FinishStream(SWIGTYPE_p_StreamingState aSctx) {
        return implJNI.FinishStream(SWIGTYPE_p_StreamingState.getCPtr(aSctx));
    }

    public static Metadata FinishStreamWithMetadata(SWIGTYPE_p_StreamingState aSctx) {
        long cPtr = implJNI.FinishStreamWithMetadata(SWIGTYPE_p_StreamingState.getCPtr(aSctx));
        return (cPtr == 0) ? null : new Metadata(cPtr, false);
    }

    public static void FreeStream(SWIGTYPE_p_StreamingState aSctx) {
        implJNI.FreeStream(SWIGTYPE_p_StreamingState.getCPtr(aSctx));
    }

    public static void FreeMetadata(Metadata m) {
        implJNI.FreeMetadata(Metadata.getCPtr(m), m);
    }

    public static void FreeString(String str) {
        implJNI.FreeString(str);
    }

    public static void PrintVersions() {
        implJNI.PrintVersions();
    }

}
